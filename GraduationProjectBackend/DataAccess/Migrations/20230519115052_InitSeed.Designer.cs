// <auto-generated />
using System;
using GraduationProjectBackend.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduationProjectBackend.DataAccess.Migrations
{
    [DbContext(typeof(MssqlDbContext))]
    [Migration("20230519115052_InitSeed")]
    partial class InitSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolder", b =>
                {
                    b.Property<int>("FavoriteFolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteFolderId"));

                    b.Property<string>("FavoriteFolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteFolderId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteFolder");

                    b.HasData(
                        new
                        {
                            FavoriteFolderId = 1,
                            FavoriteFolderName = "資料夾一",
                            UserId = 10000
                        },
                        new
                        {
                            FavoriteFolderId = 2,
                            FavoriteFolderName = "資料夾二",
                            UserId = 10000
                        },
                        new
                        {
                            FavoriteFolderId = 3,
                            FavoriteFolderName = "資料夾三",
                            UserId = 10000
                        },
                        new
                        {
                            FavoriteFolderId = 4,
                            FavoriteFolderName = "資料夾一",
                            UserId = 10001
                        },
                        new
                        {
                            FavoriteFolderId = 5,
                            FavoriteFolderName = "資料夾二",
                            UserId = 10001
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolderItem", b =>
                {
                    b.Property<int>("favoriteFolderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("favoriteFolderItemId"));

                    b.Property<int>("FavoriteFolderId")
                        .HasColumnType("int");

                    b.Property<int>("FavoriteItemId")
                        .HasColumnType("int");

                    b.HasKey("favoriteFolderItemId");

                    b.HasIndex("FavoriteFolderId");

                    b.HasIndex("FavoriteItemId");

                    b.ToTable("FavoriteFolderItem");

                    b.HasData(
                        new
                        {
                            favoriteFolderItemId = 1,
                            FavoriteFolderId = 1,
                            FavoriteItemId = 1
                        },
                        new
                        {
                            favoriteFolderItemId = 2,
                            FavoriteFolderId = 1,
                            FavoriteItemId = 2
                        },
                        new
                        {
                            favoriteFolderItemId = 3,
                            FavoriteFolderId = 1,
                            FavoriteItemId = 3
                        },
                        new
                        {
                            favoriteFolderItemId = 4,
                            FavoriteFolderId = 2,
                            FavoriteItemId = 2
                        },
                        new
                        {
                            favoriteFolderItemId = 5,
                            FavoriteFolderId = 2,
                            FavoriteItemId = 3
                        },
                        new
                        {
                            favoriteFolderItemId = 6,
                            FavoriteFolderId = 3,
                            FavoriteItemId = 4
                        },
                        new
                        {
                            favoriteFolderItemId = 7,
                            FavoriteFolderId = 3,
                            FavoriteItemId = 5
                        },
                        new
                        {
                            favoriteFolderItemId = 8,
                            FavoriteFolderId = 4,
                            FavoriteItemId = 1
                        },
                        new
                        {
                            favoriteFolderItemId = 9,
                            FavoriteFolderId = 5,
                            FavoriteItemId = 4
                        },
                        new
                        {
                            favoriteFolderItemId = 10,
                            FavoriteFolderId = 5,
                            FavoriteItemId = 5
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteItem", b =>
                {
                    b.Property<int>("FavoriteItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteItemId"));

                    b.Property<string>("FavoriteItemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FavoriteItemId");

                    b.ToTable("FavoriteItem");

                    b.HasData(
                        new
                        {
                            FavoriteItemId = 1,
                            FavoriteItemName = "館長"
                        },
                        new
                        {
                            FavoriteItemId = 2,
                            FavoriteItemName = "廖老大"
                        },
                        new
                        {
                            FavoriteItemId = 3,
                            FavoriteItemName = "總統"
                        },
                        new
                        {
                            FavoriteItemId = 4,
                            FavoriteItemName = "蔡英文"
                        },
                        new
                        {
                            FavoriteItemId = 5,
                            FavoriteItemName = "選舉"
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Member.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            roleId = 1,
                            roleName = "Users"
                        },
                        new
                        {
                            roleId = 2,
                            roleName = "Admin"
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Member.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("userId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userId = 10000,
                            account = "user1",
                            password = new byte[] { 93, 215, 213, 162, 83, 107, 157, 171, 27, 228, 95, 112, 165, 141, 154, 108, 230, 32, 146, 34, 97, 206, 40, 251, 208, 5, 106, 60, 221, 127, 85, 238, 159, 84, 196, 217, 181, 182, 127, 137, 132, 186, 131, 125, 70, 225, 51, 48, 205, 73, 139, 9, 35, 8, 165, 233, 255, 140, 36, 78, 189, 209, 101, 108, 7, 50, 229, 93, 127, 119, 58, 2, 15, 118, 129, 63, 72, 240, 112, 193, 33, 23, 129, 37, 198, 15, 95, 80, 170, 14, 84, 49, 72, 250, 221, 153, 24, 69, 167, 3, 166, 197, 50, 215, 173, 160, 105, 95, 89, 106, 144, 189, 56, 171, 255, 187, 242, 19, 227, 189, 169, 247, 209, 189, 26, 57, 120, 131, 176, 13, 92, 236, 16, 13, 197, 41, 172, 26, 222, 82, 11, 212, 189, 140, 214, 109, 70, 173, 189, 208, 96, 112, 26, 92, 185, 245, 60, 181, 112, 149, 125, 149, 47, 198, 5, 24, 31, 220, 67, 159, 51, 201, 193, 30, 138, 164, 131, 86, 2, 159, 120, 100, 252, 136, 52, 187, 116, 246, 6, 74, 229, 87, 125, 211, 233, 212, 158, 156, 253, 86, 252, 143, 74, 98, 50, 173, 242, 114, 89, 81, 71, 137, 17, 66, 95, 202, 185, 224, 97, 162, 218, 159, 183, 102, 12, 32, 240, 14, 229, 47, 75, 127, 113, 218, 27, 24, 152, 17, 11, 154, 131, 55, 92, 125, 146, 41, 136, 115, 31, 214, 61, 231, 213, 120, 207, 31 }
                        },
                        new
                        {
                            userId = 10001,
                            account = "user2",
                            password = new byte[] { 105, 114, 247, 200, 181, 26, 7, 225, 35, 68, 40, 55, 47, 4, 103, 143, 236, 86, 179, 242, 24, 69, 248, 190, 153, 177, 51, 162, 232, 118, 192, 28, 232, 141, 61, 73, 249, 92, 22, 133, 98, 240, 204, 141, 66, 120, 212, 60, 29, 117, 132, 115, 120, 108, 7, 116, 112, 211, 195, 94, 202, 73, 73, 97, 198, 38, 106, 65, 135, 14, 74, 232, 225, 88, 81, 25, 76, 159, 63, 35, 145, 172, 74, 4, 99, 41, 149, 16, 110, 208, 211, 207, 30, 178, 213, 244, 34, 126, 192, 237, 197, 34, 213, 94, 212, 232, 35, 227, 138, 13, 135, 237, 170, 17, 14, 11, 36, 42, 61, 253, 190, 148, 2, 74, 94, 70, 203, 255, 123, 198, 127, 137, 215, 190, 222, 186, 106, 173, 209, 73, 207, 99, 234, 117, 182, 13, 8, 246, 222, 39, 85, 224, 191, 14, 12, 183, 161, 248, 224, 61, 110, 223, 52, 136, 238, 179, 81, 135, 201, 79, 111, 69, 191, 36, 160, 247, 170, 150, 63, 183, 99, 249, 166, 164, 226, 164, 251, 224, 195, 126, 85, 208, 152, 43, 228, 46, 228, 133, 244, 27, 40, 153, 13, 59, 143, 67, 41, 174, 250, 221, 48, 23, 7, 139, 83, 68, 31, 65, 139, 242, 108, 166, 87, 206, 239, 48, 58, 10, 126, 91, 187, 7, 6, 37, 191, 78, 184, 90, 118, 140, 96, 207, 136, 95, 219, 136, 121, 216, 236, 69, 154, 114, 32, 95, 125, 196 }
                        },
                        new
                        {
                            userId = 10002,
                            account = "user3",
                            password = new byte[] { 11, 48, 7, 218, 29, 51, 132, 183, 51, 225, 155, 58, 139, 77, 15, 117, 27, 63, 112, 187, 187, 202, 90, 135, 236, 65, 24, 110, 212, 153, 240, 124, 63, 34, 103, 218, 25, 150, 107, 94, 72, 169, 245, 133, 234, 115, 167, 124, 186, 158, 242, 3, 145, 34, 104, 229, 46, 213, 150, 164, 132, 127, 128, 251, 75, 169, 246, 154, 125, 130, 46, 219, 30, 90, 244, 213, 232, 96, 34, 18, 172, 103, 180, 39, 79, 73, 192, 178, 115, 78, 20, 140, 217, 33, 227, 146, 0, 39, 69, 139, 239, 63, 97, 106, 47, 188, 192, 29, 134, 253, 192, 8, 94, 50, 117, 56, 139, 36, 1, 114, 178, 102, 48, 90, 37, 31, 60, 182, 40, 207, 14, 232, 103, 87, 247, 252, 102, 216, 31, 63, 129, 109, 62, 174, 155, 26, 171, 144, 177, 9, 107, 232, 135, 33, 24, 182, 85, 174, 137, 4, 120, 96, 37, 27, 74, 184, 192, 131, 32, 153, 60, 4, 76, 66, 106, 185, 196, 0, 232, 192, 1, 217, 36, 100, 250, 12, 199, 3, 12, 180, 2, 238, 137, 34, 149, 233, 253, 236, 232, 0, 36, 96, 143, 191, 129, 25, 203, 131, 115, 47, 218, 102, 32, 228, 17, 120, 143, 50, 49, 3, 46, 203, 225, 117, 15, 228, 206, 186, 37, 44, 153, 58, 11, 194, 237, 43, 54, 57, 40, 158, 72, 220, 251, 173, 52, 254, 114, 196, 249, 210, 46, 4, 226, 93, 3, 124 }
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Member.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("FavoriteFolderId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("FavoriteFolderId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleId = 1,
                            UserId = 10000
                        },
                        new
                        {
                            UserRoleId = 2,
                            RoleId = 1,
                            UserId = 10001
                        },
                        new
                        {
                            UserRoleId = 3,
                            RoleId = 1,
                            UserId = 10002
                        });
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolder", b =>
                {
                    b.HasOne("GraduationProjectBackend.DataAccess.Models.Member.User", "User")
                        .WithMany("FavoriteFolders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolderItem", b =>
                {
                    b.HasOne("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolder", "FavoriteFolder")
                        .WithMany("FavoriteFolderItems")
                        .HasForeignKey("FavoriteFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteItem", "FavoriteItem")
                        .WithMany()
                        .HasForeignKey("FavoriteItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteFolder");

                    b.Navigation("FavoriteItem");
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Member.UserRole", b =>
                {
                    b.HasOne("GraduationProjectBackend.DataAccess.Models.Member.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("FavoriteFolderId");

                    b.HasOne("GraduationProjectBackend.DataAccess.Models.Member.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Favorite.FavoriteFolder", b =>
                {
                    b.Navigation("FavoriteFolderItems");
                });

            modelBuilder.Entity("GraduationProjectBackend.DataAccess.Models.Member.User", b =>
                {
                    b.Navigation("FavoriteFolders");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
